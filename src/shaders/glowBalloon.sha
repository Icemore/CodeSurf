//Cg
//
//Cg profile arbvp1 arbfp1
//
void vshader(float3 vtx_position : POSITION,
		    float4 vtx_normal : NORMAL,
			uniform float Inflate,
			uniform float4x4 tpose_model_to_world,
			uniform float4x4 trans_model_to_world,
			uniform float4x4 tpose_world_to_apiview,
			uniform float4x4 mat_projection,
			out float4 l_position : POSITION,
			out float3 l_WorldNormal : TEXCOORD0,
			out float3 l_WorldView : TEXCOORD1
) {
    float4x4 WorldITXf = itp_modelview;
    float4x4 WorldXf = trans_model_to_world;
    float4x4 ViewIXf = inv_modelview;
    float4x4 WvpXf = mat_projection;
    l_WorldNormal = mul(WorldITXf, vtx_normal).xyz;
    float4 Po = float4(vtx_position.xyz, 1);
    Po += (Inflate * normalize(float4(vtx_normal.xyz, 0))) * vtx_normal;  //the balloon effect
    float4 Pw = mul(WorldXf, Po);
    l_WorldView = normalize(float3(ViewIXf[0].w, ViewIXf[1].w, ViewIXf[2].w) - Pw.xyz);
    l_position = mul(WvpXf, Po);
}


void fshader (float3 l_WorldNormal : TEXCOORD0,
			float3 l_WorldView : TEXCOORD1,
			uniform float3 GlowColor,
			uniform float GlowExpon,
			out float4 o_color: COLOR)
{
    float3 Nn = normalize(l_WorldNormal);
    float3 Vn = normalize(l_WorldView);
    float edge = 1.0 - dot(Nn, Vn);
    edge = pow(edge, GlowExpon);
    float3 result = edge * GlowColor.rgb;
    o_color =  float4(result, edge);
}
